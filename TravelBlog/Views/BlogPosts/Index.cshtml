@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<TravelBlog.Models.BlogPost>
@inject IImageService _imageService

@{
    ViewData["Title"] = "Index";
    string? searchString = ViewBag.Search;
}



<!-- Start Author Area  -->
<partial name="_AuthorAreaPartial" />
<!-- End Author Area  -->
<!-- Start Post List Wrapper  -->
<div class="axil-post-list-area axil-section-gap bg-color-white">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="page-title">
                    @if (string.IsNullOrEmpty(searchString))
                    {
                        <h2 class="title mb--40">Welcome to The Tech Pulse!</h2>
                    }
                    else
                    {
                        <h2 class="title mb--40">Search Results for '@searchString'!</h2>
                    }
                </div>
            </div>

            <!-- Start Post List  -->
            <div class="col-lg-8 col-xl-8">
                @* [List Blogs] *@
                @foreach (BlogPost blogPost in Model)
                {
                    <!-- blog card partial start  -->
                    <partial name="_BlogCardPartial" model="blogPost" />
                    <!-- blog card partial end  -->
                }
            </div>
            <!-- End Post List  -->
            <!-- Start Sidebar Area  -->
            <div class="col-lg-4 col-xl-4 mt_md--40 mt_sm--40">
                <partial name="_SideBarPartial" />
            </div>

            <!-- End Sidebar Area  -->
            <!-- Pagination Code Start-->

            <div>
                <div>
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>
                @if (string.IsNullOrEmpty(searchString))
                {

                    @Html.PagedListPager(Model, pageNum => Url.Action("Index", new { pageNum }),
                            new PagedListRenderOptions
                            {
                                LiElementClasses = new string[] { "my-page-item" },
                                PageClasses = new string[] { "my-page-link" }
                            })
                }
                else
                {
                    @Html.PagedListPager(Model, pageNum => Url.Action("SearchIndex", new { pageNum, searchString }),
                            new PagedListRenderOptions
                            {
                                LiElementClasses = new string[] { "my-page-item" },
                                PageClasses = new string[] { "my-page-link" }
                            })
                }
            </div>

            <!-- Pagination Code End-->

        </div>
    </div>
</div>
<!-- End Post List Wrapper  -->